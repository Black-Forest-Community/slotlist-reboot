services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: slotlist-db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: slotlist
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: slotlist-backend
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - DB_DATABASE=slotlist
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - CONFIG_JWT_SECRET=development-secret-key-change-in-production
      - CONFIG_JWT_ISSUER=http://localhost:8000
      - CONFIG_JWT_AUDIENCE=http://localhost:8000
      - CONFIG_STEAM_API_SECRET=your-steam-api-key-here
      - DJANGO_SECRET_KEY=development-django-secret-change-in-production
      - ALLOWED_HOSTS=*
      - CORS_ALLOW_ALL_ORIGINS=True
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "
        python manage.py check &&
        python manage.py runserver 0.0.0.0:8000
      "
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/api/v1/status')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Vue.js Frontend (Development)
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: slotlist-frontend-dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - BACKEND_URL=http://backend:8000
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - default

  # Vue.js Frontend (Production build)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - BACKEND_URL=http://localhost:8000
    container_name: slotlist-frontend
    ports:
      - "4000:80"
    depends_on:
      backend:
        condition: service_healthy
    profiles:
      - production

volumes:
  postgres_data: